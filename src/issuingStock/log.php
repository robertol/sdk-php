<?php

namespace StarkInfra\IssuingStock;
use StarkCore\Utils\API;
use StarkInfra\Utils\Rest;
use StarkCore\Utils\Checks;
use StarkCore\Utils\Resource;
use StarkCore\Utils\StarkDate;
use StarkInfra\IssuingStock;


class Log extends Resource
{

    public $stock;
    public $type;
    public $count;
    public $created;

    /**
    # IssuingStock\Log object

    Every time an IssuingStock entity is updated, a corresponding IssuingStock\Log
    is generated for the entity. This log is never generated by the
    user, but it can be retrieved to check additional information
    on the IssuingStock.

    ## Attributes (return-only):
        - id [string]: unique id returned when the log is created. ex: "5656565656565656"
        - stock [IssuingStock]: IssuingStock entity to which the log refers to.
        - type [string]: type of the IssuingStock event which triggered the log creation. ex: "created", "spent", "restocked", "lost"
        - count [integer]: shift in stock balance. ex: 10
        - created [DateTime]: creation datetime for the IssuingStock. 
     */
    function __construct(array $params)
    {
        parent::__construct($params);

        $this->stock = Checks::checkParam($params, "stock");
        $this->type = Checks::checkParam($params, "type");
        $this->count = Checks::checkParam($params, "count");
        $this->created = Checks::checkDateTime(Checks::checkParam($params, "created"));

        Checks::checkParams($params);
    }

    /**
    # Retrieve a specific IssuingStock\Log

    Receive a single IssuingStock\Log object previously created in the Stark Infra API by passing its id

    ## Parameters (required):
        - id [string]: object unique id. ex: "5656565656565656"

    ## Parameters (optional):
        - user [Organization/Project object, default null]: Organization or Project object. Not necessary if StarkInfra\Settings::setUser() was used before function call

    ## Return:
        - IssuingStock\Log object with updated attributes
     */
    public static function get($id, $user = null)
    {
        return Rest::getId($user, Log::resource(), $id);
    }

    /**
    # Retrieve IssuingStock\Logs

    Receive an enumerator of IssuingStock\Log objects previously created in the Stark Infra API

    ## Parameters (optional):
        - limit [integer, default null]: maximum number of objects to be retrieved. Unlimited if null. ex: 35
        - after [Date or string, default null] date filter for objects created only after specified date. ex: "2020-04-03"
        - before [Date or string, default null] date filter for objects created only before specified date. ex: "2020-04-03"
        - types [array of strings, default null]: filter for log event types. ex: ["created", "spent", "restocked", "lost"]
        - stockIds [array of strings, default null]: array of IssuingStock ids to filter logs. ex: ["5656565656565656", "4545454545454545"]
        - ids [array of strings, default null]: array of ids to filter retrieved objects. ex: ["5656565656565656", "4545454545454545"]
        - user [Organization/Project object, default null]: Organization or Project object. Not necessary if StarkInfra\Settings::setUser() was used before function call

    ## Return:
        - enumerator of IssuingStock\Log objects with updated attributes
     */
    public static function query($options = [], $user = null)
    {
        $options["after"] = new StarkDate(Checks::checkParam($options, "after"));
        $options["before"] = new StarkDate(Checks::checkParam($options, "before"));
        return Rest::getList($user, Log::resource(), $options);
    }

    /**
    # Retrieve paged IssuingStock\Logs

    Receive a list of up to 100 IssuingStock\Log objects previously created in the Stark Infra API and the cursor to the next page.
    Use this function instead of query if you want to manually page your requests.

    ## Parameters (optional):
        - cursor [string, default null]: cursor returned on the previous page function call
        - limit [integer, default 100]: maximum number of objects to be retrieved. Max = 100. ex: 50
        - after [Date or string, default null] date filter for objects created only after specified date. ex: "2020-04-03"
        - before [Date or string, default null] date filter for objects created only before specified date. ex: "2020-04-03"
        - types [array of strings, default null]: filter for log event types. ex: ["created", "spent", "restocked", "lost"]
        - stockIds [array of strings, default null]: array of IssuingStock ids to filter logs. ex: ["5656565656565656", "4545454545454545"]
        - ids [array of strings, default null]: list of ids to filter retrieved objects. ex: ["5656565656565656", "4545454545454545"]
        - user [Organization/Project object, default null]: Organization or Project object. Not necessary if StarkInfra\Settings::setUser() was used before function call
    
    ## Return:
        - list of IssuingStock\Log objects with updated attributes
        - cursor to retrieve the next page of IssuingStock\Log objects
     */
    public static function page($options = [], $user = null)
    {
        $options["after"] = new StarkDate(Checks::checkParam($options, "after"));
        $options["before"] = new StarkDate(Checks::checkParam($options, "before"));
        return Rest::getPage($user, Log::resource(), $options);
    }

    private static function resource()
    {
        $stockLog = function ($array) {
            $stock = function ($array) {
                return new IssuingStock($array);
            };
            $array["stock"] = API::fromApiJson($stock, $array["stock"]);
            return new Log($array);
        };
        return [
            "name" => "IssuingStockLog",
            "maker" => $stockLog,
        ];
    }
}
